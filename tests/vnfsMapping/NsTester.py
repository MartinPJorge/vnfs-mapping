import sys
import os
import math
import networkx as nx

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__),
    '../../src')))
from vnfsMapping import NS


class NsTester(object):

    """Test class for the NS"""

    def __init__(self):
        """TODO: to be defined1. """


    def testIteration(self):
        """Tests the iteration methods over a fixed mock NS chain that could
            have been generated by the NsGenerator
        :returns: Nothing
        """
        
        # Create the mock chain
        mockChain = nx.Graph()
        mockChain.add_node('start')
        mockChain.add_edge('start', 1)
        mockChain.add_node(1)
        mockChain.add_node(2)
        mockChain.add_node(4)
        mockChain.add_edge(1, 2)
        mockChain.add_edge(1, 4)

        mockChain.add_node(3)
        mockChain.add_edge(2, 3)
        mockChain.add_node(5)
        mockChain.add_node(6)
        mockChain.add_edge(3, 5)
        mockChain.add_edge(3, 6)

        mockChain.add_node(7)
        mockChain.add_edge(5, 7)
        mockChain.add_edge(4, 7)
        mockChain.add_edge(6, 7)

        mockChain.add_node('end')
        mockChain.add_edge(7, 'end')


        ns = NS.NS()
        ns.setChain(mockChain)
        ns.initIter()

        # Check nodes retrieval
        print '######################'
        print '## Iteration tester ##'
        print '######################'
        nextVnfs = ns.iterNext()
        if [1] != nextVnfs:
            print '  retrieval 1 is not == [1]'
        nextVnfs = ns.iterNext()
        if 2 not in nextVnfs or 4 not in nextVnfs or len(nextVnfs) != 2:
            print '  retrieval 2 is not == [2, 4]'
        nextVnfs = ns.iterNext()
        if [3] != nextVnfs:
            print '  retrieval 3 is not == [3]'
        nextVnfs = ns.iterNext()
        if 5 not in nextVnfs or 6 not in nextVnfs or len(nextVnfs) != 2:
            print '  retrieval 4 is not == [5, 6]'
        nextVnfs = ns.iterNext()
        if [7] != nextVnfs:
            print '  retrieval 5 is not == [7]'
        nextVnfs = ns.iterNext()
        if [7] != nextVnfs:
            print '  retrieval 6 is not == [7]'
        nextVnfs = ns.iterNext()
        if [7] != nextVnfs:
            print '  retrieval 7 is not == [7]'
        nextVnfs = ns.iterNext()
        if ['end'] != nextVnfs:
            print '  retrieval 8 is not == [\'end\']'
        



